<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Max&#39; Blog</title>
    <link>https://lindemax.github.io/</link>
    <description>Recent content in Overview on Max&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Dec 2021 17:00:00 +0100</lastBuildDate><atom:link href="https://lindemax.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Collection of useful PCB-Design articles</title>
      <link>https://lindemax.github.io/pcb/collection/</link>
      <pubDate>Fri, 10 Dec 2021 17:00:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/pcb/collection/</guid>
      <description>Grounding Grounding Data Converters and Solving the Mystery of AGND and DGND 
Staying Well Grounded
Decoupling / Bypass Bypass Capacitor Selection for High-Speed Designs
Decoupling Techniques
Multi-Layer Four or more layer PCB design for beginners using EAGLE
HF Parasitic Inductance of Multilayer Ceramic Capacitors
Using Via Fences for Crosstalk Reduction in PCB Circuits</description>
    </item>
    
    <item>
      <title>Keep your Linux clean</title>
      <link>https://lindemax.github.io/linux/cleanup/</link>
      <pubDate>Fri, 10 Dec 2021 15:06:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/linux/cleanup/</guid>
      <description>Today i found vscode using much space (about 8 GB) in my .config directory. It seems to save all kind of workspace configuration there. It needed to be cleaned up, so i wrote a little script that is easy to extend.
One can call this via crontabs or a systemd timer.
#!/bin/sh  # Colored output GREEN=&amp;#39;\033[0;32m&amp;#39; RED=&amp;#39;\033[0;31m&amp;#39; NC=&amp;#39;\033[0m&amp;#39; # No Color # Call with two arguments: # - Path to directory which shall be cleaned # - Time wich defines &amp;#39;depricated&amp;#39; delete_depricated () { echo &amp;#34;Deleting everything older than $GREEN$2$NCdays from $GREEN$1$NC&amp;#34; found=$(find $1 -mtime $2) echo &amp;#34;Found $RED$found$NC&amp;#34; for path in &amp;#34;$found&amp;#34;; do rm -rf &amp;#34;$path&amp;#34;; done } # Remove vscode workspaces older than 30 days delete_depricated &amp;#34;/home/max/.</description>
    </item>
    
    <item>
      <title>Charge Measurement on upcoming Muon Detectors - Scematics and electrical Simulation</title>
      <link>https://lindemax.github.io/muon/q_mes_v2_sim/</link>
      <pubDate>Thu, 09 Dec 2021 19:00:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/muon/q_mes_v2_sim/</guid>
      <description>I chose a voltage readout approach since i&amp;rsquo;ve already made some experiences with it.
This means that the SiPM&amp;rsquo;s photcurrent is driven through a resistor, which&amp;rsquo;s voltage drop is amplified by an voltage amplifier. After amplification there sits an integrator next to a comparator. The comparator will give us a short pulse, which is used to create timestamps for the event. The integrator will output a voltage, that is somehow related to the particles energy.</description>
    </item>
    
    <item>
      <title>Charge Measurement on upcoming Muon Detectors - Motivation</title>
      <link>https://lindemax.github.io/muon/q_mes_v2_mot/</link>
      <pubDate>Tue, 07 Dec 2021 19:00:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/muon/q_mes_v2_mot/</guid>
      <description>Our currently working detector prototype has one big flaw over the new upcoming one: It&amp;rsquo;s counting pulses from a Silicon Photomultiplier (SiPM), generated by ionizing radiation hitting an scintillator, that we define as &amp;lsquo;high enough&amp;rsquo;.
 What is &amp;lsquo;high enough&amp;rsquo;?
     Very first Prototype (SiPM &amp;#43; 5x5x1 cm^3 Scintillator)          &amp;#39;High Pulse&amp;#39;       Since the detector is using a BC-408 scintillator it should be able to detect every kind of charged particles, X-rays (&amp;lt; 100 keV), alphas and betas.</description>
    </item>
    
    <item>
      <title>Fourier Series in theory and with Python (Sawtooth and Square Waves)</title>
      <link>https://lindemax.github.io/sas/fourier_seris/</link>
      <pubDate>Sun, 05 Dec 2021 16:13:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/sas/fourier_seris/</guid>
      <description>In this post i&amp;rsquo;m giong to showing you how obtain the fourier coefficients of the complex fourier series for sawtooth and square waves. The approximation done by the fourier series (with a finite number of coefficients) is then compared to the original signal using a python script.
Sawtooth waves The coefficients can be obtained this way:
$$ \begin{eqnarray} c_k &amp;amp;=&amp;amp; \frac{1}{T} \int_0^T f(t) \cdot e^{-j2 \pi k \frac{t}{T}} ~ dt \newline f(t) &amp;amp;=&amp;amp; t ~~~~\text{for $0 &amp;lt; t \le T$} \end{eqnarray} $$</description>
    </item>
    
    <item>
      <title>Hosting an OpenVPN Server</title>
      <link>https://lindemax.github.io/linux/openvpn/</link>
      <pubDate>Sun, 05 Dec 2021 14:41:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/linux/openvpn/</guid>
      <description>OpenVPN is a nice tool to stay connected privately. Could be to play old LAN games with friends , or accessing a network file system on your own server, etc.
I recently wrote a shell script that creates certificates (using easy-rsa), configuration files and the directory structure needed on the server side in a &amp;lsquo;ready to be used&amp;rsquo; manner. It will ask you for the name of the CA, the VPN-Server, it&amp;rsquo;s remote address and how many client certificates/keys you want to create.</description>
    </item>
    
    <item>
      <title>Great Hugo Tutorial</title>
      <link>https://lindemax.github.io/hugo/hugo_tutorial/</link>
      <pubDate>Sun, 05 Dec 2021 06:56:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/hugo/hugo_tutorial/</guid>
      <description>This is the best hugo-beginners tutorial i have seen so far!
   Comments     initComments({ node: document.getElementById(&#34;comment-section&#34;), defaultHomeserverUrl: &#34;https://matrix.cactus.chat:8448&#34;, serverName: &#34;cactus.chat&#34;, siteName: &#34;MaxBlog&#34;, commentSectionId: &#34;hugoTutorial&#34; })  </description>
    </item>
    
    <item>
      <title>Pretty Icons with Fork Awesome</title>
      <link>https://lindemax.github.io/hugo/fork_awesome/</link>
      <pubDate>Sun, 05 Dec 2021 06:21:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/hugo/fork_awesome/</guid>
      <description>Fork Awesome is a fully open source fork of font awesome.
Check out the icons and get started.
I simply added
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/fork-awesome@1.2.0/css/fork-awesome.min.css&amp;#34; integrity=&amp;#34;sha256-XoaMnoYC5TH6/+ihMEnospgm0J1PM/nioxbOUdnM8HY=&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt; into the head-section of /themes/m10c/layouts/_default/baseof.html and was nearly ready to start .
One thing left to do is to enable rendering of plain html from within the markdown files. To do this add the following to your projects config.toml:
[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true # Enable rendering of plain html from within markdown files Cheers .</description>
    </item>
    
    <item>
      <title>DFT/FFT in theroy and with Python</title>
      <link>https://lindemax.github.io/sas/dft_fft/</link>
      <pubDate>Sat, 04 Dec 2021 19:05:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/sas/dft_fft/</guid>
      <description>Theory I wrote an article about DFT and FFT some time ago. You can view it inside your browser by clicking the link below. Currrently it&amp;rsquo;s only available in german. Please excuse this.
Article about DFT/FFT
Python The knowledge gained from the article can be used, to do something (actually not so) usefull. But you&amp;rsquo;ll get the idea ;-).
The script below will create two different sine functions. One with and one without additive noise.</description>
    </item>
    
    <item>
      <title>Render LaTeX math expressions in Hugo with MathJax 3</title>
      <link>https://lindemax.github.io/hugo/latex_in_hugo/</link>
      <pubDate>Sat, 04 Dec 2021 18:40:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/hugo/latex_in_hugo/</guid>
      <description>This is juast a simple test:
$$ \newcommand{\abs}[1]{\left\vert#1\right\vert} \newcommand{\br}[1]{\left ( #1 \right )} $$
$$ \begin{eqnarray} (f_1 * f_2)(t) &amp;amp;=&amp;amp; \int_{\mathbb{R}} f_1(t-\tau) \cdot f_2(\tau) ~d\tau \newline \end{eqnarray} $$
See how it is done!
Things to mention:
 In this hugo theme (m10c) the header is defined in themes/m10c/layouts/_default/baseof.html. The css stuff has to be added to assets/_extras.scss. Mathjax3 seems to not support \\\. Use \newline instead ;-)     Comments     initComments({ node: document.</description>
    </item>
    
    <item>
      <title>Convolution of Gaussians</title>
      <link>https://lindemax.github.io/sas/convolution_gaussians/</link>
      <pubDate>Sat, 04 Dec 2021 18:06:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/sas/convolution_gaussians/</guid>
      <description>Convolution of two Gaussians     A convolution can be imagined as a weighting of one function with another. One of the functions is mirrored in the definition area and then pushed &amp;lsquo;piece by piece&amp;rsquo; (infinitissimally small pieces!) over the other. The result is again a function that returns the &amp;lsquo;superposition&amp;rsquo; of the two functions for each possible shift. If one imagines the convolution of two Gaussians, one can guess that the result must be a Gaussian funvtion (with slightly differed shape) again.</description>
    </item>
    
  </channel>
</rss>
