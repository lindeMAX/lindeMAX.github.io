<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Max&#39; Blog</title>
    <link>https://lindemax.github.io/tags/linux/</link>
    <description>Recent content in linux on Max&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Sep 2022 17:57:37 +0200</lastBuildDate><atom:link href="https://lindemax.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hotplug events with UDEV</title>
      <link>https://lindemax.github.io/linux/udev/</link>
      <pubDate>Sat, 17 Sep 2022 17:57:37 +0200</pubDate>
      
      <guid>https://lindemax.github.io/linux/udev/</guid>
      <description>As i am using a notebook as my main device now, i needed to automate some stuff when changing workplaces.
I wanted two things to happen:
Turn off the notebooks internal screen while it is docked to it&amp;rsquo;s docking station Turn on the external keyboards backlight when connected To achieve the first goal one needs two things:
a script that manages the monitor settings a udev-rule that executes that script The script has to be called with a command line argument.</description>
    </item>
    
    <item>
      <title>Vim Cheatsheet</title>
      <link>https://lindemax.github.io/linux/vim/</link>
      <pubDate>Mon, 01 Aug 2022 16:32:37 +0200</pubDate>
      
      <guid>https://lindemax.github.io/linux/vim/</guid>
      <description>Search &amp;amp; Replace /pattern Search for pattern ?pattern Search backward for pattern n Repeat search in same direction N Repeat search in opposite direction :%s/old/new/g Replace all old with new throughout file (gn is better though) :%s/old/new/gc Replace all old with new throughout file with confirmations </description>
    </item>
    
    <item>
      <title>Linux Cheatsheet</title>
      <link>https://lindemax.github.io/linux/cheatsheet/</link>
      <pubDate>Sat, 30 Jul 2022 16:32:37 +0200</pubDate>
      
      <guid>https://lindemax.github.io/linux/cheatsheet/</guid>
      <description>Have a look at this open book for more information:
Shell Redirections Redirect STDOUT to file: ls 1&amp;gt; file
Append STDOUT to existing file: ls 1&amp;gt;&amp;gt; file
Redirect STDERR to file: ls 2&amp;gt; file
Redirect STDERR to STDOUT: ls 2&amp;gt;&amp;amp;1
Suppress STDERR: ls 2&amp;gt;/dev/null
Pipelines Pipe output into another program: ls -l | grep &amp;#34;something&amp;#34;
FIFOs FIFOs (First In First Out) are like pipeline but can be used by multiple programs simultaneously.</description>
    </item>
    
    <item>
      <title>Keep your Linux clean</title>
      <link>https://lindemax.github.io/linux/cleanup/</link>
      <pubDate>Fri, 10 Dec 2021 15:06:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/linux/cleanup/</guid>
      <description>Today i found vscode using much space (about 8 GB) in my .config directory. It seems to save all kind of workspace configuration there. It needed to be cleaned up, so i wrote a little script that is easy to extend.
One can call this via crontabs or a systemd timer.
#!/bin/sh # Colored output GREEN=&amp;#39;\033[0;32m&amp;#39; RED=&amp;#39;\033[0;31m&amp;#39; NC=&amp;#39;\033[0m&amp;#39; # No Color # Call with two arguments: # - Path to directory which shall be cleaned # - Time wich defines &amp;#39;depricated&amp;#39; delete_depricated () { echo &amp;#34;Deleting everything older than $GREEN $2 $NC days from $GREEN $1 $NC&amp;#34; found=$(find $1 -mtime $2) echo &amp;#34;Found $RED $found $NC&amp;#34; for path in &amp;#34;$found&amp;#34;; do rm -rf &amp;#34;$path&amp;#34;; done } # Remove vscode workspaces older than 30 days delete_depricated &amp;#34;/home/max/.</description>
    </item>
    
    <item>
      <title>Hosting an OpenVPN Server</title>
      <link>https://lindemax.github.io/linux/openvpn/</link>
      <pubDate>Sun, 05 Dec 2021 14:41:00 +0100</pubDate>
      
      <guid>https://lindemax.github.io/linux/openvpn/</guid>
      <description>OpenVPN is a nice tool to stay connected privately. Could be to play old LAN games with friends , or accessing a network file system on your own server, etc.
I recently wrote a shell script that creates certificates (using easy-rsa), configuration files and the directory structure needed on the server side in a &amp;lsquo;ready to be used&amp;rsquo; manner. It will ask you for the name of the CA, the VPN-Server, it&amp;rsquo;s remote address and how many client certificates/keys you want to create.</description>
    </item>
    
  </channel>
</rss>
